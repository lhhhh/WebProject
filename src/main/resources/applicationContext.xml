<?xml version="1.0" encoding="UTF-8"?>
<beans  xmlns="http://www.springframework.org/schema/beans"  
    xmlns:tx="http://www.springframework.org/schema/tx"  
    xmlns:p="http://www.springframework.org/schema/p"  
    xmlns:aop="http://www.springframework.org/schema/aop"   
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
    xsi:schemaLocation="http://www.springframework.org/schema/beans   
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd   
    http://www.springframework.org/schema/tx   
    http://www.springframework.org/schema/tx/spring-tx-3.0.xsd   
    http://www.springframework.org/schema/aop    
    http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">  
    
    <!-- <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
	    <property name="db" value="classpath:db.properties"/>
	</bean> -->
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:jdbc.properties</value>
			</list>
		</property>
	</bean>
    
	<!-- 配置数据源-->  
    <!-- 阿里巴巴druid连接池 -->
	<bean id="dataSourceProxool" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<property name="driverClassName" value="${database.driverClassName}" />
		<property name="url" value="${database.url}" />
		<property name="username" value="${database.username}" />
		<property name="password" value="${database.password}" />
		<property name="initialSize" value="${database.initialSize}" />
		<property name="maxActive" value="${database.maxActive}" />
		<property name="minIdle" value="${database.minIdle}" />
		<property name="maxWait" value="${database.maxWait}" />
		<property name="validationQuery" value="${database.validationQuery}" />
		<property name="testOnBorrow" value="${database.testOnBorrow}" />
		<property name="testOnReturn" value="${database.testOnReturn}" />
		<property name="testWhileIdle" value="${database.testWhileIdle}" />
		<property name="timeBetweenEvictionRunsMillis" value="${database.timeBetweenEvictionRunsMillis}" />
		<property name="filters" value="${database.filters}" />
		<!-- 配置监控统计拦截的filters -->
		<property name="proxyFilters">
			<list>
				<ref bean="stat-filter" />
			</list>
		</property>
	</bean>  
	
	<bean id="stat-filter" class="com.alibaba.druid.filter.stat.StatFilter">
		<!--慢SQL统计，如果SQL执行时间超过一定时间则记录为慢SQL -->
		<property name="slowSqlMillis" value="3000" />
		<!--慢SQL统计日志输出 -->
		<property name="logSlowSql" value="true" />
		<!--合并SQL统计 例如select * from table t where t.id =1，会被变为select * from table t where t.id =？来统计 -->
		<property name="mergeSql" value="true" />
	</bean>
	
	<!-- 配置声明式事务管理 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSourceProxool"></property>
	</bean>
	
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
	    <property name="dataSource" ref="dataSourceProxool" />  
	    <property name="configLocation" value="classpath:mybatis-config.xml"></property>  
	</bean>  
	
	<bean id="studentDao" class="org.mybatis.spring.mapper.MapperFactoryBean">  
	    <property name="mapperInterface" value="com.gyq.dao.StudentDao"></property>  
	    <property name="sqlSessionFactory" ref="sqlSessionFactory"></property>  
	</bean>  
</beans> 